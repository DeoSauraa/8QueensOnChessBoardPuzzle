<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>8-Queens-Chess</title>
    <style>
        *{
    margin: 0;
    padding: 0;
}

body{
    background-color: #485555;
    text-align: center;
}

.container{
    height: 80vh;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
}

.game{
    height: 80vmin;
    width: 80vmin;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    gap: 1vmin;
}

.box{
    height: 9vmin;
    width: 9vmin;
    border-radius: 1rem;
    box-shadow: 0 0 1rem;
    font-size: 6vmin;
    
}

.boxWhite{
    background-color: white;
}
.boxBlack{
    background-color: black;
}

.wrongBox{
    border: 5px solid red;
}

.resBtn{
    height: 3vmin;
    width: 18vmin;
    border-radius: 1rem;
    box-shadow: 0 0 1rem;
    font-size: 1.5vmin;
}

#msg{
    color: #ffffc7;
    font-size: 8vmin;
}

.msg-container{
    color: #ffffc7;
    font-size: 8vmin;
    height: 10vmin;
}

.hide{
    display: none;
}

.btnClicked{
    font-weight: bold;
}
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

</head>
<body>
    <h1 style="color: white;">8 Queen On Chess Board!</h1>
    <h4 style="color: white;">To solve this puzzle, You have to place 8 queens on this chess board.</h4>

    <div class="msg-container">
        <p id="msg" class="hide">Winner</p>
    </div>
    
    <div class="container">
        <div class="game" id="GameDiv">

        </div>
    </div>
<br>    
    <button class="resBtn">Reset Game</button>
    <script>
	let turn1 = true;
    let clickNum = 1;

let horizontalCheck = [['1', '2', '3', '4', '5', '6', '7', '8'],
['9', '10', '11', '12', '13', '14', '15', '16'],
['17', '18', '19', '20', '21', '22', '23', '24'],
['25', '26', '27', '28', '29', '30', '31', '32'],
['33', '34', '35', '36', '37', '38', '39', '40'],
['41', '42', '43', '44', '45', '46', '47', '48'],
['49', '50', '51', '52', '53', '54', '55', '56'],
['57', '58', '59', '60', '61', '62', '63', '64']];


let verticalCheck = [['1', '9', '17', '25', '33', '41', '49', '57'],
['2', '10', '18', '26', '34', '42', '50', '58'],
['3', '11', '19', '27', '35', '43', '51', '59'],
['4', '12', '20', '28', '36', '44', '52', '60'],
['5', '13', '21', '29', '37', '45', '53', '61'],
['6', '14', '22', '30', '38', '46', '54', '62'],
['7', '15', '23', '31', '39', '47', '55', '69'],
['8', '16', '24', '32', '40', '48', '56', '64']];


let diagonal1Check = [['49', '58'],
['41', '50', '59'],
['33', '42', '51', '60'],
['25', '34', '43', '52', '61'],
['17', '26', '35', '44', '53', '62'],
['9', '18', '27', '36', '45', '54', '63'],
['1', '10', '19', '28', '37', '46', '55', '64'],
['2', '11', '20', '29', '38', '47', '56'],
['3', '12', '21', '30', '39', '48'],
['4', '13', '22', '31', '40'],
['5,14', '23', '32'],
['6', '15', '24'],
['7', '16']]


let diagonal2Check = [['2', '9'],
['3', '10', '17'],
['4', '11', '18', '25'],
['5', '12', '19', '26', '33'],
['6', '13', '20', '27', '34', '41'],
['7', '14', '21', '28', '35', '42', '49'],
['8', '15', '22', '29', '36', '43', '50', '57'],
['16', '23', '30', '37', '44', '51', '58'],
['24', '31', '38', '45', '52', '59'],
['32', '39', '46', '53', '60'],
['48', '55', '62'],
['56', '63']];

let divgame = document.getElementById('GameDiv');
let butnumber = 1;
for(let i = 1; i <= 8; i++){
    for(let j = 1; j <= 8; j++){
        let but = document.createElement('button');
        but.classList.add('box');
        but.id = butnumber;
        butnumber++;
        divgame.append(but);

        if(turn1){
            but.classList.add('boxWhite');
            turn1 = false;
        }else{
            but.classList.add('boxBlack');
            turn1 = true;
        }

        if(j == 8){
            turn1 = !turn1;
        }

    }
}

let boxes = document.querySelectorAll('.box');
let resetbtn = document.querySelector('.resBtn');
let winnerMsg =  document.querySelector('#msg');

const resetGame = () => {
        location.reload();
};

let btnClickedAll = () => {
    return document.querySelectorAll('.btnClicked').length;
    //console.log(document.querySelectorAll('.btnClicked').length);
}

const checkIfWin = () => {
    let queensCount = btnClickedAll();
    let wrongQueenPlaced = document.querySelectorAll('.wrongBox').length;
    let messageWinner = document.querySelector('#msg');
    if(queensCount == 8 && wrongQueenPlaced == 0){
        console.log(`You won with ${queensCount} & ${wrongQueenPlaced}`);
        messageWinner.classList.remove('hide');
        messageWinner.innerText = 'You successfully solved puzzle..!';
    }else{
        messageWinner.classList.add('hide');
        messageWinner.innerText = '';
    }
};

boxes.forEach((box)=>{
        box.addEventListener('click' ,()=>{
            let counter = btnClickedAll();
            //console.log();
            if(box.classList.contains('btnClicked')){
                box.innerHTML = '';
                box.classList.remove('btnClicked', 'wrongBox');
                //console.log('Inner html Removed');
            }else{
                if(counter < 8){
                    if(box.className == 'box boxBlack'){
                        let a = document.getElementById(box.id);
                        a.style.color = 'white';
                        box.innerHTML  = "<i class='fas fa-chess-queen'></i>";
                    }else{
                        box.innerHTML  = "<i class='fas fa-chess-queen'></i>";
                    }
                    box.classList.add('btnClicked');
                    //console.log('Inner html added');
    
                    checkIfQueenExistsH(box.id, horizontalCheck);
                    checkIfQueenExistsH(box.id, verticalCheck);
                    checkIfQueenExistsH(box.id, diagonal1Check);
                    checkIfQueenExistsH(box.id, diagonal2Check);
                }else{
                    
                }
                checkIfWin();
            }
        });
});

const checkIfQueenExistsH = (x, arrayCheck) => {
    for (const chkLine of arrayCheck) {
        if (chkLine.includes(x)) {
            for (const items of chkLine) {
                if (items !== x) {
                    let boxx = document.getElementById(items);
                    let boxWrong = document.getElementById(x);

                    // Check if boxx and boxWrong are not null
                    if (boxx && boxWrong) {
                        if (boxx.innerHTML != '') {
                            boxWrong.classList.add('wrongBox');
                            console.log('This is wrong position..!');
                        }
                    } else {
                        //console.warn(`Element with id ${items} or ${x} not found.`);
                    }
                }
            }
        }
    }
}


resetbtn.addEventListener('click', resetGame);

	</script>
</body>
</html> 